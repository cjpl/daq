/////////////////////////////////////////////////////////////////////////////
// Name:        record_ch_control.h
// Purpose:     
// Author:      NDA
// Modified by: 
// Created:     03/10/2006 11:01:16
// RCS-ID:      
// Copyright:   CAEN S.p.A All rights reserved.
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 03/10/2006 11:01:16

#ifndef _RECORD_CH_CONTROL_H_
#define _RECORD_CH_CONTROL_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "record_ch_control.h"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/tglbtn.h"
#include "wx/spinctrl.h"
////@end includes

#include "generic_board.h"

/*!
 * Forward declarations
 */

////@begin forward declarations
class wxToggleButton;
class wxSpinCtrl;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_RECORD_CH_DIALOG 10015
#define SYMBOL_RECORDCHCONTROL_STYLE 0
#define SYMBOL_RECORDCHCONTROL_TITLE _("RecordChControl")
#define SYMBOL_RECORDCHCONTROL_IDNAME ID_RECORD_CH_DIALOG
#define SYMBOL_RECORDCHCONTROL_SIZE wxSize(400, 300)
#define SYMBOL_RECORDCHCONTROL_POSITION wxDefaultPosition
#define ID_TOGGLEBUTTON 10001
#define ID_RATE_DIVIDER_SPINCTRL 10017
#define ID_FORMAT_CHOICE 10032
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

/*!
 * RecordChControl class declaration
 */

class RecordChControl: public wxPanel
{    
    DECLARE_DYNAMIC_CLASS( RecordChControl )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    RecordChControl( );
    RecordChControl( wxWindow* parent, wxWindowID id = SYMBOL_RECORDCHCONTROL_IDNAME, const wxPoint& pos = SYMBOL_RECORDCHCONTROL_POSITION, const wxSize& size = SYMBOL_RECORDCHCONTROL_SIZE, long style = SYMBOL_RECORDCHCONTROL_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_RECORDCHCONTROL_IDNAME, const wxPoint& pos = SYMBOL_RECORDCHCONTROL_POSITION, const wxSize& size = SYMBOL_RECORDCHCONTROL_SIZE, long style = SYMBOL_RECORDCHCONTROL_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin RecordChControl event handler declarations

    /// wxEVT_COMMAND_CHECKBOX_CLICKED event handler for ID_TOGGLEBUTTON
    void OnTogglebuttonClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_SPINCTRL_UPDATED event handler for ID_RATE_DIVIDER_SPINCTRL
    void OnRateDividerSpinctrlUpdated( wxSpinEvent& event );

    /// wxEVT_COMMAND_CHOICE_SELECTED event handler for ID_FORMAT_CHOICE
    void OnFormatChoiceSelected( wxCommandEvent& event );

////@end RecordChControl event handler declarations
    void OnRateDividerSpinctrlTextUpdated( wxCommandEvent& event );

////@begin RecordChControl member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end RecordChControl member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin RecordChControl member variables
    wxStaticBox* m_main_sizer_text;
    wxToggleButton* m_ch_enable_control;
    wxSpinCtrl* m_ch_rate_divider_control;
    wxChoice* m_format_control;
////@end RecordChControl member variables

	bool SetupBoard( GenericBoard* p_board, int ch_index, int ch_count, bool is_virtual);
	bool UpdateControls( void);
	void UpdateRateDivider( int value);
	void SetEnable( bool enable);
private:
	bool m_is_virtual;
	// Generic Board pointer
	GenericBoard* m_p_board;
	GenericBoardChannel* m_p_board_channel;
	int m_ch_index;
	int m_ch_count;

};

#endif
    // _RECORD_CH_CONTROL_H_
