/////////////////////////////////////////////////////////////////////////////
// Name:        trash.cpp
// Purpose:     
// Author:      NDA
// Modified by: 
// Created:     06/04/2006 10:13:12
// RCS-ID:      
// Copyright:   CAEN S.p.A All rights reserved.
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 06/04/2006 10:13:12

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma implementation "trash.h"
#endif

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "trash.h"

////@begin XPM images
////@end XPM images

/*!
 * Trash type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Trash, wxDialog )

/*!
 * Trash event table definition
 */

BEGIN_EVENT_TABLE( Trash, wxDialog )

////@begin Trash event table entries
////@end Trash event table entries

END_EVENT_TABLE()

/*!
 * Trash constructors
 */

Trash::Trash( )
{
}

Trash::Trash( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create(parent, id, caption, pos, size, style);
}

/*!
 * Trash creator
 */

bool Trash::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Trash member initialisation
    m_grid_line_type_control = NULL;
////@end Trash member initialisation

////@begin Trash creation
    SetExtraStyle(GetExtraStyle()|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    Centre();
////@end Trash creation
    return true;
}

/*!
 * Control creation for Trash
 */

void Trash::CreateControls()
{    
////@begin Trash content construction
    // Generated by DialogBlocks, 18/02/2009 10:05:02 (unregistered)

    Trash* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    ViewChControl* itemViewChControl3 = new ViewChControl( itemDialog1, ID_PANEL, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
    itemBoxSizer2->Add(itemViewChControl3, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxString* m_grid_line_type_controlStrings = NULL;
    m_grid_line_type_control = new wxChoice( itemDialog1, ID_GRID_LINE_TYPE_CHOICE, wxDefaultPosition, wxDefaultSize, 0, m_grid_line_type_controlStrings, 0 );
    itemBoxSizer2->Add(m_grid_line_type_control, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxButton* itemButton5 = new wxButton( itemDialog1, ID_BUTTON1, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer2->Add(itemButton5, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxTextCtrl* itemTextCtrl6 = new wxTextCtrl( itemDialog1, ID_TEXTCTRL1, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer2->Add(itemTextCtrl6, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    itemBoxSizer2->Add(5, 5, 1, wxGROW|wxALL, 5);

    wxBitmap itemStaticBitmap8Bitmap(wxNullBitmap);
    wxStaticBitmap* itemStaticBitmap8 = new wxStaticBitmap( itemDialog1, wxID_STATIC, itemStaticBitmap8Bitmap, wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer2->Add(itemStaticBitmap8, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxCheckBox* itemCheckBox9 = new wxCheckBox( itemDialog1, ID_CHECKBOX1, _("Checkbox"), wxDefaultPosition, wxDefaultSize, 0 );
    itemCheckBox9->SetValue(false);
    itemBoxSizer2->Add(itemCheckBox9, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer10 = new wxBoxSizer(wxVERTICAL);
    itemBoxSizer2->Add(itemBoxSizer10, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxSpinCtrl* itemSpinCtrl11 = new wxSpinCtrl( itemDialog1, ID_SPINCTRL1, _T("0"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100, 0 );
    itemBoxSizer2->Add(itemSpinCtrl11, 0, wxALIGN_CENTER_HORIZONTAL|wxLEFT, 11);

    itemBoxSizer2->Add(11, 7, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxStaticBox* itemStaticBox13 = new wxStaticBox( itemDialog1, wxID_STATIC, _("Static box"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer2->Add(itemStaticBox13, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxPanel* itemPanel14 = new wxPanel( itemDialog1, ID_PANEL3, wxDefaultPosition, wxSize(3, -1), 0 );
    itemBoxSizer2->Add(itemPanel14, 0, wxALIGN_CENTER_HORIZONTAL, 0);

    wxStaticBox* itemStaticBoxSizer15Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Static"));
    wxStaticBoxSizer* itemStaticBoxSizer15 = new wxStaticBoxSizer(itemStaticBoxSizer15Static, wxVERTICAL);
    itemDialog1->SetSizer(itemStaticBoxSizer15);

    wxBoxSizer* itemBoxSizer16 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer16);

    wxStaticText* itemStaticText17 = new wxStaticText( itemDialog1, wxID_STATIC, _("Static text"), wxDefaultPosition, wxDefaultSize, 0 );

    wxStaticBox* itemStaticBoxSizer18Static = new wxStaticBox(itemDialog1, wxID_ANY, _("Static"));
    wxStaticBoxSizer* itemStaticBoxSizer18 = new wxStaticBoxSizer(itemStaticBoxSizer18Static, wxHORIZONTAL);
    itemDialog1->SetSizer(itemStaticBoxSizer18);

    wxStaticLine* itemStaticLine19 = new wxStaticLine( itemDialog1, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL );

    wxBoxSizer* itemBoxSizer20 = new wxBoxSizer(wxHORIZONTAL);
    itemDialog1->SetSizer(itemBoxSizer20);

////@end Trash content construction
}

/*!
 * Should we show tooltips?
 */

bool Trash::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Trash::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Trash bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Trash bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Trash::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Trash icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Trash icon retrieval
}
